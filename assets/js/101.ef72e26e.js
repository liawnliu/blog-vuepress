(window.webpackJsonp=window.webpackJsonp||[]).push([[101],{749:function(e,n,s){"use strict";s.r(n);var v=s(16),t=Object(v.a)({},(function(){var e=this,n=e.$createElement,s=e._self._c||n;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("h1",{attrs:{id:"学习-node-的准备工作"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#学习-node-的准备工作"}},[e._v("#")]),e._v(" 学习 node 的准备工作")]),e._v(" "),s("h2",{attrs:{id:"node-介绍"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#node-介绍"}},[e._v("#")]),e._v(" node 介绍")]),e._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"https://nodejs.org/en/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Node.js"),s("OutboundLink")],1),e._v("是 JavaScript 的一种运行环境，开源、跨平台、可用于众多流行工具里。")]),e._v(" "),s("li",[e._v("也就是说 Node.js 可以作为 JavaScript 在服务器上运行的一种形式，在其标准库中提供了一组异步的 I/O 原生功能（用以防止 JavaScript 代码被阻塞），并且 Node.js 中的库通常是使用非阻塞的范式编写的（从而使阻塞行为成为例外而不是规范）。")]),e._v(" "),s("li",[e._v("Node.js 是一个底层的平台，社区在 Node.js 上构建了数千个库，例如：Express、NestJS、Koa、Socket.io 等。")]),e._v(" "),s("li",[e._v("Npm 是 Node.js 标准的软件包管理器，解决 Node.js 部署的很多问题；可以下载别人写好的程序（包、命令行等），也可以自己写程序发布到 Npm 上。")])]),e._v(" "),s("h2",{attrs:{id:"node-js、npm-的安装"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#node-js、npm-的安装"}},[e._v("#")]),e._v(" Node.js、Npm 的安装")]),e._v(" "),s("ul",[s("li",[e._v("打开"),s("a",{attrs:{href:"https://nodejs.org/en/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Node.js 官网"),s("OutboundLink")],1),e._v("，如果很慢就使用"),s("a",{attrs:{href:"http://nodejs.cn/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Node.js 中文网"),s("OutboundLink")],1),e._v("，选择“Recommended For Most Users（推荐给大多数用户）”，也就是稳定版本。")]),e._v(" "),s("li",[e._v("如果你想看 nodejs 以前发布的版本，可以去"),s("a",{attrs:{href:"https://nodejs.org/en/download/releases/",target:"_blank",rel:"noopener noreferrer"}},[e._v("以前的版本"),s("OutboundLink")],1),e._v("查看。")]),e._v(" "),s("li",[e._v("npm 包管理工具是同 node.js 一并安装的，意思是 node.js 安装好后 npm 也随之安装到电脑上了。")]),e._v(" "),s("li",[e._v("打开“Git Bash”，没有装 Git 的可以看一下"),s("RouterLink",{attrs:{to:"/book-web/web后端/学习node.js/Git的使用.html"}},[e._v("Git 的使用")]),e._v("；或者打开 cmd，输入"),s("code",{pre:!0},[e._v("node --version")]),e._v("可以查看安装的 node 是什么版本的，输入"),s("code",{pre:!0},[e._v("npm --version")]),e._v("可以查看安装的 npm 是什么版本的。")],1)]),e._v(" "),s("h2",{attrs:{id:"使用-nvm-管理-node-的版本"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用-nvm-管理-node-的版本"}},[e._v("#")]),e._v(" 使用 nvm 管理 node 的版本")]),e._v(" "),s("ol",[s("li",[s("p",[e._v("在工作当中会遇到一个项目使用 10.01 版本，另一可能是使用的 8.0.1 版本，需要切换到对应的版本，那就得使用"),s("strong",[e._v("nvm")]),e._v("来"),s("strong",[e._v("管理")]),e._v("本地的 node"),s("strong",[e._v("版本")]),e._v("。")])]),e._v(" "),s("li",[s("p",[e._v("如果是"),s("strong",[e._v("Windows 系统")]),e._v("，可以在"),s("a",{attrs:{href:"https://github.com/",target:"_blank",rel:"noopener noreferrer"}},[e._v("GitHub"),s("OutboundLink")],1),e._v("里搜索"),s("code",{pre:!0},[e._v("nvm-windows")])]),e._v(" "),s("ul",[s("li",[e._v("在搜索结果列表里选择"),s("a",{attrs:{href:"https://github.com/coreybutler/nvm-windows",target:"_blank",rel:"noopener noreferrer"}},[e._v("coreybutler/nvm-windows"),s("OutboundLink")],1)]),e._v(" "),s("li",[e._v("进入之后找到“Download”字样，点击它进入下载页，可以选择"),s("code",{pre:!0},[e._v("nvm-setup.zip")]),e._v("进行下载安装。可以选择稳定一点的版本。")])])]),e._v(" "),s("li",[s("p",[e._v("如果是"),s("strong",[e._v("Mac 系统")]),e._v("，下面三条脚本任意一条都可以，当然也可以使用"),s("strong",[e._v("brew")]),e._v("来安装"),s("strong",[e._v("nvm")])]),e._v(" "),s("ul",[s("li",[s("code",{pre:!0},[e._v("curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.1/install.sh | bash")]),e._v("。")]),e._v(" "),s("li",[s("code",{pre:!0},[e._v("wget -qO- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.1/install.sh | bash")]),e._v("。")]),e._v(" "),s("li",[s("code",{pre:!0},[e._v("curl -o- https://gitee.com/mirrors/nvm/raw/master/install.sh | bash")])]),e._v(" "),s("li",[e._v("使用"),s("strong",[e._v("brew")]),e._v("来安装"),s("strong",[e._v("nvm")]),e._v("，进入"),s("a",{attrs:{href:"https://brew.sh/index_zh-cn",target:"_blank",rel:"noopener noreferrer"}},[e._v("brew 官网"),s("OutboundLink")],1),e._v("，复制一行代码"),s("code",{pre:!0},[e._v('/bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"')]),e._v("到电脑命令行里运行，就能安装好"),s("strong",[e._v("brew")]),e._v("，然后运行"),s("code",{pre:!0},[e._v("brew install nvm")]),e._v("就可以使用"),s("strong",[e._v("brew")]),e._v("来安装"),s("strong",[e._v("nvm")]),e._v("了")])])]),e._v(" "),s("li",[s("p",[e._v("如果"),s("code",{pre:!0},[e._v("nvm")]),e._v("命令不存在，那就是 nvm 安装目录下运行"),s("code",{pre:!0},[e._v("nvm.exe")]),e._v("，然后在命令窗口下输入"),s("code",{pre:!0},[e._v("nvm on")]),e._v("表示开启 nvm。")])]),e._v(" "),s("li",[s("p",[e._v("安装好"),s("strong",[e._v("nvm")]),e._v("之后，我们命令行里使用"),s("code",{pre:!0},[e._v("nvm list")]),e._v("查看当前所有的 node 版本，"),s("code",{pre:!0},[e._v("nvm install v10.13.0")]),e._v("安装指定版本的 node 版，"),s("code",{pre:!0},[e._v("nvm use 10.13.0")]),e._v("切换到指定版本。")])])]),e._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# 查看有哪些可以下载的版本")]),e._v("\nnvm ls-remote\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# 安装指定的版本")]),e._v("\nnvm "),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("install")]),e._v(" v16.14.0\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# 使用特定的版本")]),e._v("\nnvm use v16.14.0\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# 设置别名，对应的是 nvm unalias")]),e._v("\nnvm "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("alias")]),e._v(" v16 v16.14.0\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# 设置了之后就可以使用别名了")]),e._v("\nnvm use v16\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# 设置默认的版本")]),e._v("\nnvm "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("alias")]),e._v(" default v16.14.0\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br"),s("span",{staticClass:"line-number"},[e._v("6")]),s("br"),s("span",{staticClass:"line-number"},[e._v("7")]),s("br"),s("span",{staticClass:"line-number"},[e._v("8")]),s("br"),s("span",{staticClass:"line-number"},[e._v("9")]),s("br"),s("span",{staticClass:"line-number"},[e._v("10")]),s("br"),s("span",{staticClass:"line-number"},[e._v("11")]),s("br"),s("span",{staticClass:"line-number"},[e._v("12")]),s("br"),s("span",{staticClass:"line-number"},[e._v("13")]),s("br"),s("span",{staticClass:"line-number"},[e._v("14")]),s("br"),s("span",{staticClass:"line-number"},[e._v("15")]),s("br"),s("span",{staticClass:"line-number"},[e._v("16")]),s("br"),s("span",{staticClass:"line-number"},[e._v("17")]),s("br")])]),s("h2",{attrs:{id:"node-相关问题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#node-相关问题"}},[e._v("#")]),e._v(" node 相关问题")]),e._v(" "),s("ol",[s("li",[s("code",{pre:!0},[e._v("nvm")]),e._v("命令不存在")])]),e._v(" "),s("ul",[s("li",[e._v("去"),s("code",{pre:!0},[e._v("nvm")]),e._v("安装目录下运行"),s("code",{pre:!0},[e._v("nvm.exe")]),e._v("，然后在命令窗口下输入"),s("code",{pre:!0},[e._v("nvm on")]),e._v("表示开启 nvm。")])]),e._v(" "),s("ol",{attrs:{start:"2"}},[s("li",[s("code",{pre:!0},[e._v("node")]),e._v("命令不存在")])]),e._v(" "),s("ul",[s("li",[e._v("在运行完"),s("code",{pre:!0},[e._v("nvm install v10.13.0")]),e._v("后一定要运行"),s("code",{pre:!0},[e._v("nvm use 10.13.0")]),e._v("，它会给 node 配置环境变量等。")])]),e._v(" "),s("ol",{attrs:{start:"3"}},[s("li",[s("code",{pre:!0},[e._v("exit status 1: You do not have sufficient privilege to perform this operation.")])])]),e._v(" "),s("ul",[s("li",[e._v("暂时不用 Git Bash，要使用管理员身份运行 cmd 命令窗口，然后输入"),s("code",{pre:!0},[e._v("nvm use 10.13.0")]),e._v("就可以切换 nodejs 版本了。")])]),e._v(" "),s("h2",{attrs:{id:"nodejs-环境和浏览器环境"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#nodejs-环境和浏览器环境"}},[e._v("#")]),e._v(" NodeJS 环境和浏览器环境")]),e._v(" "),s("ol",[s("li",[e._v("内置对象不同\n"),s("ul",[s("li",[e._v("浏览器环境中提供了 window 全局对象")]),e._v(" "),s("li",[e._v("NodeJS 环境中的全局对象不叫 window，而是叫 global")])])]),e._v(" "),s("li",[e._v("this 默认指向不同\n"),s("ul",[s("li",[e._v("浏览器环境中全局 this 默认指向 window")]),e._v(" "),s("li",[e._v("NodeJS 环境中全局 this 默认指向空对象"),s("code",{pre:!0},[e._v("{}")])])])]),e._v(" "),s("li",[e._v("API 不同\n"),s("ul",[s("li",[e._v("浏览器环境中提供了操作节点的 DOM 相关的 API 和操作浏览器的 BOM 相关 API")]),e._v(" "),s("li",[e._v("NodeJs 环境中没有 HTML 节点也没有浏览器，所以 NodeJs 环境中没有 DOM/BOM 相关 API")])])])]),e._v(" "),s("h2",{attrs:{id:"服务端和客户端开发区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#服务端和客户端开发区别"}},[e._v("#")]),e._v(" 服务端和客户端开发区别")]),e._v(" "),s("ul",[s("li",[e._v("服务稳定性：server 端可能会遭到各种恶意攻击和误操作。单个客户端可以意外挂掉，但是服务端不能。（PM2 做进程守护）")]),e._v(" "),s("li",[e._v("考虑内存和 CPU：客户端独占一个浏览器，内存和 CPU 都不是问题。server 端要承载很多请求，CPU 和内存都是稀缺资源。（stream 写日志来优化内存和 CPU，redis 写 session 来扩展内存和 CPU）")]),e._v(" "),s("li",[e._v("日志记录：前端也会参与日志记录，但只是日志的发起放，不关心后续。server 端要记录日志、存储日志、分析日志，前端不关心。")]),e._v(" "),s("li",[e._v("安全：server 端要随时准备接收各种恶意攻击，前端则很少。越权操作、数据库攻击等。（登录验证，预防 xss 攻击和 sql 注入）")]),e._v(" "),s("li",[e._v("集群和服务拆分：产品发展速度快，流量可能迅速增加。如何通过扩展机器和服务拆分来承载大流量。")])])])}),[],!1,null,null,null);n.default=t.exports}}]);